# =================================================================
# Deployment: Defines how to run the application pods
# =================================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shopsmart-ai-deployment
  labels:
    app: shopsmart-ai
spec:
  replicas: 1 # Start with one instance of the app
  selector:
    matchLabels:
      app: shopsmart-ai
  template:
    metadata:
      labels:
        app: shopsmart-ai
    spec:
      containers:
      - name: shopsmart-ai-container
        image: shopsmart-ai-app:latest # The name of your Docker image
        imagePullPolicy: IfNotPresent # Important for local dev with Minikube
        ports:
        - containerPort: 5000

        # --- Best Practice: Resource Management ---
        # Ensures the pod has enough resources and doesn't consume too much.
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m" # 0.25 of a CPU core
          limits:
            memory: "1Gi"
            cpu: "500m" # 0.5 of a CPU core

        # --- Best Practice: Health Checks ---
        # Liveness probe: Restarts the container if the app crashes.
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 20

        # Readiness probe: Marks the pod as ready to receive traffic only when the app is up.
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10

        # --- Securely Inject Environment Variables ---
        # This references a Kubernetes Secret that you will create.
        envFrom:
        - secretRef:
            name: shopsmart-ai-secrets

---
# =================================================================
# Service: Exposes the application to the outside world
# =================================================================
apiVersion: v1
kind: Service
metadata:
  name: shopsmart-ai-service
spec:
  type: LoadBalancer # Exposes the service externally using a cloud load balancer
  selector:
    app: shopsmart-ai # This must match the labels in the Deployment
  ports:
  - protocol: TCP
    port: 80 # The port the service will be available on externally
    targetPort: 5000 # The port on the container to forward traffic to
    name: http # Name is required for Prometheus service discovery